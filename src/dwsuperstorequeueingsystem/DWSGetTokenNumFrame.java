/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dwsuperstorequeueingsystem;

import java.util.LinkedList;
import java.util.Queue;

/**
 *
 * @author User
 */
public class DWSGetTokenNumFrame extends javax.swing.JFrame {

    /**
     * Creates new form DWSGetTokenNumFrame
     */
    public Queue<DataItem> regularQueue1;
    public Queue<DataItem> regularQueue2;
    public Queue<DataItem> priorityQueue3;
    public int regularTokenCounter;
    public int priorityTokenCounter;
    public int served1=0;
    public int served2=0;
    public int served3=0;
    public LinkedList<String> generatedRegularTokensOrder1;
    public LinkedList<String>generatedRegularTokensOrder2;
    public LinkedList<String>generatedPriorityTokensOrder3;
    private DWSEmployeePOV employeePOV;

    public DWSGetTokenNumFrame() {
        initComponents();
        regularQueue1 = new LinkedList<>();
        regularQueue2 = new LinkedList<>();
        priorityQueue3 = new LinkedList<>();
        regularTokenCounter = 1;
        priorityTokenCounter = 1;
        generatedRegularTokensOrder1 = new LinkedList<>();
        generatedRegularTokensOrder2 = new LinkedList<>();
        generatedPriorityTokensOrder3 = new LinkedList<>();
        
    }
    

    public DWSGetTokenNumFrame(DWSEmployeePOV employeePOV) {
    initComponents();
    
    // Pass the instance of DWSEmployeePOV to DWSGetTokenNumFrame
    employeePOV.setGetTokenNumFrame(this);
    this.employeePOV = employeePOV;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        RegularButton = new javax.swing.JButton();
        PriorityButton = new javax.swing.JButton();
        GetTokenNumBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackButton.setBorder(null);
        BackButton.setBorderPainted(false);
        BackButton.setContentAreaFilled(false);
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 130, 40));

        RegularButton.setBorder(null);
        RegularButton.setBorderPainted(false);
        RegularButton.setContentAreaFilled(false);
        RegularButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegularButtonActionPerformed(evt);
            }
        });
        getContentPane().add(RegularButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 180, 120));

        PriorityButton.setBorder(null);
        PriorityButton.setBorderPainted(false);
        PriorityButton.setContentAreaFilled(false);
        PriorityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriorityButtonActionPerformed(evt);
            }
        });
        getContentPane().add(PriorityButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 190, 130));

        GetTokenNumBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DWSuperstoreQueueing System/GET TOKEN NUMBER (USER POV).png"))); // NOI18N
        getContentPane().add(GetTokenNumBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        dispose();
        DWSMainFrame mf = new DWSMainFrame();
        mf.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    public String enqueueRegularCustomer() {
        String regNum = "REG0" + regularTokenCounter;

        if (regularTokenCounter % 2 != 0) { // accepts odd here
            generatedRegularTokensOrder1.add(regNum);
            regularTokenCounter++;
            DataItem regularCustomer = new DataItem(regNum);
            regularQueue1.offer(regularCustomer);
        } else {
            generatedRegularTokensOrder2.add(regNum); // accepts even here
            regularTokenCounter++;
            DataItem regularCustomer = new DataItem(regNum);
            regularQueue2.offer(regularCustomer);
        }

        return regNum;
    }

    public String enqueuePriorityCustomer() {
        String prioNum = "PRIO0" + priorityTokenCounter;
        generatedPriorityTokensOrder3.add(prioNum);
        priorityTokenCounter++;
        DataItem priorityCustomer = new DataItem(prioNum);
        priorityQueue3.offer(priorityCustomer);
        return prioNum;
    }
    
    public String getFirstEnqueuedRegularToken1() {
        if (!generatedRegularTokensOrder1.isEmpty()) {
            return generatedRegularTokensOrder1.getFirst();
        } else {
            return "";
        }
    }

    public String getFirstEnqueuedRegularToken2() {
        if (!generatedRegularTokensOrder2.isEmpty()) {
            return generatedRegularTokensOrder2.getFirst();
        } else {
            return "";
        }
    }
    
    public String getFirstEnqueuedPriorityToken3() {
        if (!generatedPriorityTokensOrder3.isEmpty()) {
            return generatedPriorityTokensOrder3.getFirst();
        } else {
            return "";
        }
    }

    public void dequeueRegularQueue1() {
        if (!regularQueue1.isEmpty()) {
            // Dequeue the customer from regularQueue1
            DataItem customer = regularQueue1.poll();

            // Update the generatedRegularTokensOrder1 list
            if (!generatedRegularTokensOrder1.isEmpty()) {
                generatedRegularTokensOrder1.removeFirst();
            }

            // Call the updateWindowOne method in the DWSEmployeePOV class
            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            String newToken = getFirstEnqueuedRegularToken1();
            employeePOV.updateWindowOne(newToken);
        } else {
            // If the queue is empty, set the text to "EMPTY"
            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            employeePOV.updateWindowOne("EMPTY");
        }
    }

    public void dequeueRegularQueue2() {
        if (!regularQueue2.isEmpty()) {
            DataItem customer = regularQueue2.poll();

            if (!generatedRegularTokensOrder2.isEmpty()) {
                generatedRegularTokensOrder2.removeFirst();
            }

            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            String newToken = getFirstEnqueuedRegularToken2();
            employeePOV.updateWindowTwo(newToken);
        } else {
            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            employeePOV.updateWindowTwo("EMPTY");
        }
    }

    public void dequeuePriorityQueue3() {
        if (!priorityQueue3.isEmpty()) {
            DataItem customer = priorityQueue3.poll();

            if (!generatedPriorityTokensOrder3.isEmpty()) {
                generatedPriorityTokensOrder3.removeFirst();
            }

            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            String newToken = getFirstEnqueuedPriorityToken3();
            employeePOV.updatePrioWindow(newToken);
        } else {
            DWSEmployeePOV employeePOV = new DWSEmployeePOV();
            employeePOV.updatePrioWindow("EMPTY");
        }
    }
    
    private void RegularButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegularButtonActionPerformed

        String generatedToken = enqueueRegularCustomer();
        DWSRegTokenNumFrame reg = new DWSRegTokenNumFrame();

        reg.regNum.setText(generatedToken);
        reg.setVisible(true);
        
    }//GEN-LAST:event_RegularButtonActionPerformed

    private void PriorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriorityButtonActionPerformed

        String generatedToken = enqueuePriorityCustomer() ;
        DWSPrioTokenNumFrame prio = new DWSPrioTokenNumFrame();

        prio.prioNum.setText(generatedToken);
        prio.setVisible(true);

    }//GEN-LAST:event_PriorityButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DWSGetTokenNumFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DWSGetTokenNumFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DWSGetTokenNumFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DWSGetTokenNumFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DWSGetTokenNumFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel GetTokenNumBG;
    private javax.swing.JButton PriorityButton;
    private javax.swing.JButton RegularButton;
    // End of variables declaration//GEN-END:variables
}
